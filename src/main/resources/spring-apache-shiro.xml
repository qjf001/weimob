<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="cmsShiroRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroEhcacheManager"/>
    </bean>

    <!-- 缓存管理 , shiro ehcache默認的配置文件路徑為classpath:org/apache/shiro/cache/ehcache/ehcache.xml-->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager" >
        <property name="cacheManager" ref="ehcacheManager" />
    </bean>

    <!-- 授权 认证 -->
    <bean id="cmsShiroRealm" class="com.qjf.shiro.CmsShiroRealm" >
        <property name="authorizationCacheName" value="shiro.authorizationCache"/>
        <!--<property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                &lt;!&ndash; 加密算法为MD5 &ndash;&gt;
                <property name="hashAlgorithmName" value="MD5"></property>
                &lt;!&ndash; 加密次数 &ndash;&gt;
                <property name="hashIterations" value="2"></property>
            </bean>
        </property>-->
    </bean>

    <!-- 静态注入，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/login" />
         <property name="successUrl" value="/admin/main" />
        <property name="unauthorizedUrl" value="/403" />
        <!--	初始配置，现采用自定义	-->
        <property name="filterChainDefinitions">
            <value>
                <!-- 登錄時表單提交的uri -->
                /login = authc<!-- 使用 formAuthenticationFilter 进行登录验证 -->
                /admin/** = perms
            </value>
        </property>
        <!-- 配置自定義過濾器，或者覆蓋默認過濾器 -->
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"></entry>
                <!-- perms org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter 默认过滤器 ，本例采用自定义权限过滤器 -->
                <entry key="perms" value-ref="permission"></entry>
            </util:map>
        </property>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="com.qjf.shiro.filter.MyFormAuthenticationFilter">
        <property name="usernameParam" value="username" />
        <property name="passwordParam" value="password" />
        <property name="codeParam" value="captcha" />
        <property name="loginUrl" value="/login" /><!-- /login.jsp 默認值 -->
        <property name="successUrl" value="/admin/main"></property>
    </bean>

    <!-- 认证数据库存储-->
    <bean id="permission" class="com.qjf.shiro.filter.PermissionFilter"/>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
     <!--会话DAO-->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <!-- 会话Cookie 180000-->
     <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
         <constructor-arg value="sid"/>
         <property name="httpOnly" value="true"/>
         <property name="maxAge" value="180000"/>
     </bean>
    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval"  value="1800000"/><!-- 单位MS-->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
</beans>